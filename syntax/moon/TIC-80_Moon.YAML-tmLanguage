# [PackageDev] target_format: plist, ext: tmLanguage
---
name: TIC-80 moon
comment: MoonScript language for TIC-80
scopeName: source.moon
fileTypes: [moon]
uuid: a5ef3080-11ac-4556-b3e1-f59ae4290980

patterns:

- name: support.function.moonscript
  match: \b(TIC|scanline|btn|btnp|mouse|print|font|trace|spr|map|mset|mget|pix|line|circ|circb|rect|rectb|tri|cls|peek|poke|peek4|poke4|memcpy|memset|pmem|sfx|time|clip|music|sync|exit)\b

- name: comment.line.double-dash.moonscript
  match: (--)(?!\[\[).*$\n?
  captures:
    '1': {name: punctuation.definition.comment.moonscript}

- name: string.quoted.single.moonscript
  begin: ''''
  beginCaptures:
    '0': {name: punctuation.definition.string.begin.moonscript}
  end: ''''
  endCaptures:
    '0': {name: punctuation.definition.string.end.moonscript}
  patterns:
  - name: constant.character.escape.moonscript
    match: \\.

- name: string.quoted.double.moonscript
  begin: '"'
  beginCaptures:
    '0': {name: punctuation.definition.string.begin.moonscript}
  end: '"'
  endCaptures:
    '0': {name: punctuation.definition.string.end.moonscript}
  patterns:
  - match: \\.
    name: constant.character.escape.moonscript

- name: string.quoted.other.multiline.moonscript
  begin: (?<!--)\[(=*)\[
  beginCaptures:
    '0': {name: punctuation.definition.string.begin.moonscript}
  end: \]\1\]
  endCaptures:
    '0': {name: punctuation.definition.string.end.moonscript}

- name: constant.numeric.moonscript
  match: (?<![\d.])\s0x[a-fA-F\d]+|\b\d+(\.\d+)?([eE]-?\d+)?|\.\d+([eE]-?\d+)?

- name: constant.other
  match: \b[A-Z_]*\b(?!:)

- name: meta.variable.language
  match: (\s*(class)\s*(\w+))
  captures:
    '1': {name: entity.name.type.class}
    '2': {name: storage.type.class}
    '3': {name: variable.language}

- name: meta.entity.name.function
  begin: (\s*[a-zA-Z_]\w*\s*(:)(?=(.*?(->|=>))))
  beginCaptures:
    '1': {name: entity.name.function}
    '2': {name: keyword.operator}
  end: |-
    (->|=>|
    )
  endCaptures:
    '1': {name: keyword.operator}
  patterns:
  - include: $self

- name: keyword.operator
  match: =>|->

- name: keyword.operator.moonscript
  match: \b(and|or|not)\b

- name: keyword.operator.moonscript
  match: \+|-|%|#|\*|\/|\^|==?|~=|!=|\\|:|,|;|\.|<=?|>=?|(?<!\.)\.{2}(?!\.)

- name: storage.modifier
  match: '{|}|\[|\]|\(|\)'

- name: storage.type.class
  match: \b(class|extends|super)\b

- name: keyword.control
  match: \b(if|then|else|elseif|export|import|from|switch|when|with|using|do|for|in|while|return|require|break)\b

- name: variable.language
  match: \b(self)\b

- name: constant.language.nil
  match: \b(nil)\b

- name: constant.language.boolean
  match: \b(true|false)\b

- name: invalid.language.moonscript
  match: (?<!\.|\\)\b(function|repeat|local|end)\b(?!\s*:)

- name: support.function.moonscript
  match: (?<![^.]\.|\\)\b(assert|collectgarbage|dofile|error|getfenv|getmetatable|ipairs|loadfile|loadstring|module|next|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|tonumber|tostring|type|unpack|xpcall)\b

- name: support.constant
  match: (?<![^.]\.|\\)\b(_G)\b

- name: support.function.library.moonscript
  match: (?<![^.]\.|\\)\b(coroutine\.(create|resume|running|status|wrap|yield)|string\.(byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\.(concat|insert|maxn|remove|sort)|math\.(abs|acos|asin|atan2?|ceil|cosh?|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pow|rad|random|randomseed|sinh?|sqrt|tanh?)|io\.(close|flush|input|lines|open|output|popen|read|tmpfile|type|write)|os\.(clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\.(cpath|loaded|loadlib|path|preload|seeall)|debug\.(debug|[gs]etfenv|[gs]ethook|getinfo|[gs]etlocal|[gs]etmetatable|getregistry|[gs]etupvalue|traceback))\b

- name: meta.variable.language
  match: (@?)([a-zA-Z_]\w?)
  captures:
    '1': {name: variable.language.self}
    '2': {name: variable.language}



